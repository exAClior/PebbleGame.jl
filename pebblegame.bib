@article{ahoOptimizationStraightLine1972,
  title = {Optimization of {{Straight Line Programs}}},
  author = {Aho, Alfred V. and Ullman, Jeffrey D.},
  date = {1972-03},
  journaltitle = {SIAM Journal on Computing},
  shortjournal = {SIAM J. Comput.},
  volume = {1},
  number = {1},
  pages = {1--19},
  publisher = {{Society for Industrial and Applied Mathematics}},
  issn = {0097-5397},
  doi = {10.1137/0201002},
  url = {https://epubs.siam.org/doi/abs/10.1137/0201002},
  urldate = {2024-05-11},
  abstract = {Trees in an n-node forest are merged according to instructions in a given sequence, while other instructions in the sequence ask for the lowest common ancestor of pairs of nodes. We show that any sequence of \$O(n)\$ such instructions can be processed “on-line” in \$O(n\textbackslash log n)\$ steps on a random access computer.If we can accept our answer “off-line”, that is, no answers need to be produced until the entire sequence of instructions has been seen, then we may perform the task in \$O(n\textbackslash alpha (n))\$ steps, where \$\textbackslash alpha (n)\$ is the very slowly growing inverse Ackermann function defined in [14].A third algorithm solves a problem of intermediate complexity. We require the answers on-line, but we assume that all tree merging instructions precede the information requests. This algorithm requires \$O(n \textbackslash log \textbackslash log n)\$ time.We apply the first on-line algorithm to a problem in code optimization, that of computing immediate dominators in a reducible flow graph. We show how this computation can be performed in \$O(n\textbackslash log n)\$ steps.},
  file = {/home/exaclior/Zotero/storage/AWTJX6ZZ/Aho and Ullman - 1972 - Optimization of Straight Line Programs.pdf}
}

@inproceedings{chanHardnessApproximationPSPACE2015,
  title = {Hardness of {{Approximation}} in {{PSPACE}} and {{Separation Results}} for {{Pebble Games}}},
  booktitle = {2015 {{IEEE}} 56th {{Annual Symposium}} on {{Foundations}} of {{Computer Science}}},
  author = {Chan, Siu Man and Lauria, Massimo and Nordstrom, Jakob and Vinyals, Marc},
  date = {2015-10},
  pages = {466--485},
  issn = {0272-5428},
  doi = {10.1109/FOCS.2015.36},
  url = {https://ieeexplore.ieee.org/document/7354410},
  urldate = {2024-05-12},
  abstract = {We consider the pebble game on DAGs with bounded fan-in introduced in [Paterson and Hewitt '70] and the reversible version of this game in [Bennett '89], and study the question of how hard it is to decide exactly or approximately the number of pebbles needed for a given DAG in these games. We prove that the problem of deciding whether s pebbles suffice to reversibly pebble a DAG G is PSPACE-complete, as was previously shown for the standard pebble game in [Gilbert, Lengauer and Tarjan '80]. Via two different graph product constructions we then strengthen these results to establish that both standard and reversible pebbling space are PSPACE-hard to approximate to within any additive constant. To the best of our knowledge, these are the first hardness of approximation results for pebble games in an unrestricted setting (even for polynomial time). Also, since [Chan '13] proved that reversible pebbling is equivalent to the games in [Dymond and Tompa '85] and [Raz and McKenzie '99], our results apply to the Dymond – Tompa and Raz – McKenzie games as well, and from the same paper it follows that resolution depth is PSPACE-hard to determine up to any additive constant. We also obtain a multiplicative logarithmic separation between reversible and standard pebbling space. This improves on the additive logarithmic separation previously known and could plausibly be tight, although we are not able to prove this. We leave as an interesting open problem whether our additive hardness of approximation result could be strengthened to a multiplicative bound if the computational resources are decreased from polynomial space to the more common setting of polynomial time.},
  eventtitle = {2015 {{IEEE}} 56th {{Annual Symposium}} on {{Foundations}} of {{Computer Science}}},
  keywords = {Additives,Approximation methods,Complexity theory,Computer science,Dymond-Tompa game,Games,pebbling,Polynomials,PSPACE-complete,PSPACE-hardness of approximation,Raz-Mc Kenzie game,resolution depth,reversible pebbling,separation,Standards},
  file = {/home/exaclior/Zotero/storage/45MNNWJ5/Chan et al. - 2015 - Hardness of Approximation in PSPACE and Separation.pdf}
}

@thesis{chanPebbleGamesComplexity2013,
  title = {Pebble {{Games}} and {{Complexity}}},
  author = {Chan, Siu Man},
  date = {2013},
  institution = {UC Berkeley},
  url = {https://escholarship.org/uc/item/8dq8k8fw},
  urldate = {2024-05-09},
  abstract = {We study the connection between pebble games and complexity.First, we derive complexity results using pebble games.It is shown that three pebble games used for studying computational complexity are equivalent: namely, the two-person pebble game of Dymond-Tompa, the two-person pebble game of Raz-McKenzie, and the one-person reversible pebble game of Bennett have the same pebble costs over any directed acyclic graph.The three pebble games have been used for studying parallel complexity and for proving lower bounds under restricted settings, and we show one more such lower bound on circuit-depth.Second, the pebble costs are applied to proof complexity.Concerning a family of unsatisfiable CNFs called pebbling contradictions, the pebble cost in any of the pebble games controls the scaling of some parameters of resolution refutations.Namely, the pebble cost controls the minimum depth of resolution refutations and the minimum size of tree-like resolution refutations.Finally, we study the space complexity of computing the pebble costs and of computing the minimum depth of resolution refutations.It is PSPACE-complete to compute the pebble cost in any of the three pebble games, and to compute the minimum depth of resolution refutations.},
  langid = {english},
  file = {/home/exaclior/Zotero/storage/ULUAZI72/Chan - 2013 - Pebble Games and Complexity.pdf}
}

@article{CorrectionSpaceBounds1977,
  title = {Correction to “{{Space Bounds}} for a {{Game}} on {{Graphs}}” by {{Wolfgang J}}. {{Paul}}, {{Robert Endre Tarjan}} and {{James R}}. {{Celoni}}},
  date = {1977-12-01},
  journaltitle = {Mathematical systems theory},
  shortjournal = {Math. Systems Theory},
  volume = {11},
  number = {1},
  pages = {85--85},
  issn = {1433-0490},
  doi = {10.1007/BF01768470},
  url = {https://doi.org/10.1007/BF01768470},
  urldate = {2024-05-12},
  langid = {english},
  keywords = {Computational Mathematic,Space Bound},
  file = {/home/exaclior/Zotero/storage/W8IFIEVG/1977 - Correction to “Space Bounds for a Game on Graphs” .pdf}
}

@inproceedings{demaineInapproximabilityStandardPebble2017,
  title = {Inapproximability of the {{Standard Pebble Game}} and {{Hard}} to {{Pebble Graphs}}},
  booktitle = {Algorithms and {{Data Structures}}},
  author = {Demaine, Erik D. and Liu, Quanquan C.},
  editor = {Ellen, Faith and Kolokolova, Antonina and Sack, Jörg-Rüdiger},
  date = {2017},
  pages = {313--324},
  publisher = {Springer International Publishing},
  location = {Cham},
  doi = {10.1007/978-3-319-62127-2_27},
  abstract = {Pebble games are single-player games on DAGs involving placing and moving pebbles on nodes of the graph according to a certain set of rules. The goal is to pebble a set of target nodes using a minimum number of pebbles. In this paper, we present a possibly simpler proof of the result in~[4] and strengthen the result to show that it is PSPACE-hard to determine the minimum number of pebbles to an additive \$\$n\textasciicircum\{1/3-\textbackslash epsilon \}\$\$term for all \$\$\textbackslash epsilon {$>$} 0\$\$, which improves upon the currently known additive constant hardness of approximation~[4] in the standard pebble game. We also introduce a family of explicit, constant indegree graphs with n nodes where there exists a graph in the family such that using \$\$0{$<$} k {$<$} \textbackslash sqrt\{n\}\$\$pebbles requires \$\$\textbackslash varOmega ((n/k)\textasciicircum k)\$\$moves to pebble in both the standard and black-white pebble games. This independently answers an open question summarized in~[14] of whether a family of DAGs exists that meets the upper bound of \$\$O(n\textasciicircum k)\$\$moves using constant k pebbles with a different construction than that presented in~[1].},
  isbn = {978-3-319-62127-2},
  langid = {english},
  file = {/home/exaclior/Zotero/storage/KKDU6JNP/Demaine and Liu - 2017 - Inapproximability of the Standard Pebble Game and .pdf}
}

@inproceedings{demaineRedBluePebbleGame2018,
  title = {Red-{{Blue Pebble Game}}: {{Complexity}} of {{Computing}} the {{Trade-Off}} between {{Cache Size}} and {{Memory Transfers}}},
  shorttitle = {Red-{{Blue Pebble Game}}},
  booktitle = {Proceedings of the 30th on {{Symposium}} on {{Parallelism}} in {{Algorithms}} and {{Architectures}}},
  author = {Demaine, Erik D. and Liu, Quanquan C.},
  date = {2018-07-11},
  series = {{{SPAA}} '18},
  pages = {195--204},
  publisher = {Association for Computing Machinery},
  location = {New York, NY, USA},
  doi = {10.1145/3210377.3210387},
  url = {https://dl.acm.org/doi/10.1145/3210377.3210387},
  urldate = {2024-05-12},
  abstract = {The red-blue pebble game was formulated in the 1980s\textasciitilde\textbackslash citeHK81 to model the I/O complexity of algorithms on a two-level memory hierarchy. Given a directed acyclic graph representing computations (vertices) and their dependencies (edges), the red-blue pebble game allows sequentially adding, removing, and recoloring red or blue pebbles according to a few rules, where red pebbles represent data in cache (fast memory) and blue pebbles represent data on disk (slow, external memory). Specifically, a vertex can be newly pebbled red if and only if all of its predecessors currently have a red pebble; pebbles can always be removed; and pebbles can be recolored between red and blue (corresponding to reading or writing data between disk and cache, also called I/Os or memory transfers). Given an upper bound on the number of red pebbles at any time (the cache size), the goal is to compute a game execution with the fewest pebble recolorings (memory transfers) that finish with pebbles on a specified subset of nodes (outputs get computed). In this paper, we investigate the complexity of computing this trade-off between red-pebble limit (cache size) and number of recolorings (memory transfers) in general DAGs. First we prove this problem PSPACE-complete through an extension of the proof PSPACE-hardness of black pebbling complexity\textasciitilde\textbackslash citeGLT80. Second, we consider a natural restriction on the red-blue pebble game to forbid pebble deletions, or equivalently, forbid discarding data from cache without first writing it to disk. This assumption both simplifies the model and immediately places the trade-off computation problem within NP. Unfortunately, we show that even this restricted version is NP-complete. Finally, we show that the trade-off problem parameterized by the number of transitions is W[1]-hard, meaning that there is likely no algorithm running in a fixed polynomial for constant number of transitions.},
  isbn = {978-1-4503-5799-9},
  keywords = {computational complexity,external memory model,red-blue pebble game},
  file = {/home/exaclior/Zotero/storage/H93JY3IT/Demaine and Liu - 2018 - Red-Blue Pebble Game Complexity of Computing the .pdf}
}

@online{derezendeNullstellensatzSizeDegreeTradeoffs2020,
  title = {Nullstellensatz {{Size-Degree Trade-offs}} from {{Reversible Pebbling}}},
  author = {family=Rezende, given=Susanna F., prefix=de, useprefix=true and Meir, Or and Nordström, Jakob and Robere, Robert},
  date = {2020-01-08},
  eprint = {2001.02481},
  eprinttype = {arxiv},
  eprintclass = {cs},
  url = {http://arxiv.org/abs/2001.02481},
  urldate = {2024-05-12},
  abstract = {We establish an exactly tight relation between reversible pebblings of graphs and Nullstellensatz refutations of pebbling formulas, showing that a graph G can be reversibly pebbled in time t and space s if and only if there is a Nullstellensatz refutation of the pebbling formula over G in size t + 1 and degree s (independently of the field in which the Nullstellensatz refutation is made). We use this correspondence to prove a number of strong size-degree trade-offs for Nullstellensatz, which to the best of our knowledge are the first such results for this proof system.},
  langid = {english},
  pubstate = {preprint},
  keywords = {Computer Science - Computational Complexity},
  file = {/home/exaclior/Zotero/storage/NQCDNLWA/de Rezende et al. - 2020 - Nullstellensatz Size-Degree Trade-offs from Revers.pdf}
}

@article{dinhOptimizationBasedMappersLower,
  title = {Optimization-{{Based Mappers}} and {{Lower Bounds}} for {{Tensor Problems}}},
  author = {Dinh, Grace},
  langid = {english},
  file = {/home/exaclior/Zotero/storage/LDHQY7QZ/Dinh - Optimization-Based Mappers and Lower Bounds for Te.pdf}
}

@article{fellnerGreedyPebblingProof2019,
  title = {Greedy Pebbling for Proof Space Compression},
  author = {Fellner, Andreas and Woltzenlogel~Paleo, Bruno},
  date = {2019-02-01},
  journaltitle = {International Journal on Software Tools for Technology Transfer},
  shortjournal = {Int J Softw Tools Technol Transfer},
  volume = {21},
  number = {1},
  pages = {71--86},
  issn = {1433-2787},
  doi = {10.1007/s10009-017-0459-0},
  url = {https://doi.org/10.1007/s10009-017-0459-0},
  urldate = {2024-05-12},
  abstract = {Automated reasoning tools for the verification and synthesis of software often produce proofs to allow independent certification of the correctness of the produced solutions. As proofs can be large, this paper considers the problem of compressing proofs with respect to their space, which is approximately proportional to the memory necessary to check them. Proof checking with a small amount of available memory is analogous to playing a pebbling game with a small number of pebbles. This paper exploits this analogy and describes novel algorithms for playing a pebbling game. The sequence of moves executed in the pebbling game then corresponds to an improved topological ordering of the nodes of the proof, leading to smaller memory consumption when the proof is checked. Because the number of possible pebbling strategies and topological orderings is too large, brute-force approaches to find optimal solutions are impractical, and hence, the new pebbling algorithms proposed here are based on heuristics for finding good, though not necessarily optimal, solutions. The algorithms are evaluated on the task of compressing the space of thousands of propositional resolution proofs generated by SAT- and SMT-solvers.},
  langid = {english},
  keywords = {Memory consumption,Pebbling games,Proof compression,Resolution},
  file = {/home/exaclior/Zotero/storage/RR7L4X7F/Fellner and Woltzenlogel Paleo - 2019 - Greedy pebbling for proof space compression.pdf}
}

@inproceedings{gilbertPebblingProblemComplete1979,
  title = {The Pebbling Problem Is Complete in Polynomial Space},
  booktitle = {Proceedings of the Eleventh Annual {{ACM}} Symposium on {{Theory}} of Computing  - {{STOC}} '79},
  author = {Gilbert, John R. and Lengauer, Thomas and Tarjan, Robert Endre},
  date = {1979},
  pages = {237--248},
  publisher = {ACM Press},
  location = {Atlanta, Georgia, United States},
  doi = {10.1145/800135.804418},
  url = {http://portal.acm.org/citation.cfm?doid=800135.804418},
  urldate = {2024-05-11},
  eventtitle = {The Eleventh Annual {{ACM}} Symposium},
  langid = {english},
  file = {/home/exaclior/Zotero/storage/E9HDX5AN/Gilbert et al. - 1979 - The pebbling problem is complete in polynomial spa.pdf}
}

@article{hopcroftTimeSpace1977,
  title = {On {{Time Versus Space}}},
  author = {Hopcroft, John and Paul, Wolfgang and Valiant, Leslie},
  date = {1977-04-01},
  journaltitle = {Journal of the ACM},
  shortjournal = {J. ACM},
  volume = {24},
  number = {2},
  pages = {332--337},
  issn = {0004-5411},
  doi = {10.1145/322003.322015},
  url = {https://dl.acm.org/doi/10.1145/322003.322015},
  urldate = {2024-05-11},
  abstract = {It is shown that every deterministic multitape Turing machine of time complexity t(n) can be simulated by a deterministic Turing machine of tape complexity t(n)/logt(n). Consequently, for tape constructable t(n), the class of languages recognizable by multitape Turing machines of time complexity t(n) is strictly contained in the class of languages recognized by Turing machines of tape complexity t(n). In particular the context-sensitive languages cannot be recognized in linear time by deterministic multitape Turing machines.},
  file = {/home/exaclior/Zotero/storage/3RW577WS/Hopcroft et al. - 1977 - On Time Versus Space.pdf}
}

@online{jinNewToolsPeak2023,
  title = {New {{Tools}} for {{Peak Memory Scheduling}}},
  author = {Jin, Ce and Purohit, Manish and Svitkina, Zoya and Vee, Erik and Wang, Joshua R.},
  date = {2023-12-20},
  eprint = {2312.13526},
  eprinttype = {arxiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.2312.13526},
  url = {http://arxiv.org/abs/2312.13526},
  urldate = {2024-05-12},
  abstract = {We study scheduling of computation graphs to minimize peak memory consumption, an increasingly critical task due to the surge in popularity of large deep-learning models. This problem corresponds to the weighted version of the classical one-shot black pebbling game. We propose the notion of a dominant schedule to capture the idea of finding the ``best'' schedule for a subgraph and introduce new tools to compute and utilize dominant schedules. Surprisingly, we show that despite the strong requirements, a dominant schedule exists for any computation graph; and, moreover, that it is possible to compute the dominant schedule efficiently whenever we can find optimal schedules efficiently for a particular class of graphs (under mild technical conditions). We apply these new tools to analyze trees and series-parallel graphs. We show that the weighted one-shot black pebbling game is strongly NP-complete even when the graph is an out-tree -- or simpler still, a pumpkin, one of the simplest series-parallel graphs. On the positive side, we design a fixed-parameter tractable algorithm to find a dominant schedule (hence also a peak memory minimizing schedule) for series-parallel graphs when parameterized by the out-degree. This algorithm runs in time \$2\textasciicircum\{O(d \textbackslash log d)\} \textbackslash cdot poly(n)\$ for series-parallel graphs with \$n\$ nodes and maximum out-degree \$d\$; for pumpkins, we can improve the dependence on \$d\$ to \$O(2\textasciicircum d \textbackslash cdot poly(n))\$.},
  pubstate = {preprint},
  keywords = {Computer Science - Data Structures and Algorithms},
  file = {/home/exaclior/Zotero/storage/B8ACYWW6/Jin et al. - 2023 - New Tools for Peak Memory Scheduling.pdf;/home/exaclior/Zotero/storage/8N6BI4EI/2312.html}
}

@book{kapronLogicAutomataComputational2023,
  title = {Logic, {{Automata}}, and {{Computational Complexity}}: {{The Works}} of {{Stephen A}}. {{Cook}}},
  shorttitle = {Logic, {{Automata}}, and {{Computational Complexity}}},
  editor = {Kapron, Bruce M.},
  date = {2023-04},
  edition = {1},
  volume = {43},
  publisher = {Association for Computing Machinery},
  location = {New York, NY, USA},
  abstract = {Professor Stephen A. Cook is a pioneer of the theory of computational complexity. His work on NP-completeness and the P vs. NP problem remains a central focus of this field. Cook won the 1982 Turing Award for “his advancement of our understanding of the complexity of computation in a significant and profound way.” This volume includes a selection of seminal papers embodying the work that led to this award, exemplifying Cook’s synthesis of ideas and techniques from logic and the theory of computation including NP-completeness, proof complexity, bounded arithmetic, and parallel and space-bounded computation. These papers are accompanied by contributed articles by leading researchers in these areas, which convey to a general reader the importance of Cook’s ideas and their enduring impact on the research community. The book also contains biographical material, Cook’s Turing Award lecture, and an interview. Together these provide a portrait of Cook as a recognized leader and innovator in mathematics and computer science, as well as a gentle mentor and colleague.},
  isbn = {9798400707797},
  pagetotal = {425},
  file = {/home/exaclior/Zotero/storage/PYXY7A9F/Kapron - 2023 - Logic, Automata, and Computational Complexity The.pdf}
}

@online{kornerupTightBoundsSpooky2024,
  title = {Tight {{Bounds}} on the {{Spooky Pebble Game}}: {{Recycling Qubits}} with {{Measurements}}},
  shorttitle = {Tight {{Bounds}} on the {{Spooky Pebble Game}}},
  author = {Kornerup, Niels and Sadun, Jonathan and Soloveichik, David},
  date = {2024-02-06},
  eprint = {2110.08973},
  eprinttype = {arxiv},
  eprintclass = {quant-ph},
  url = {http://arxiv.org/abs/2110.08973},
  urldate = {2024-05-09},
  abstract = {Pebble games are popular models for analyzing time-space trade-offs. In particular, reversible pebble game strategies are frequently applied in quantum algorithms like Grover’s search to efficiently simulate classical computation on inputs in superposition, as unitary operations are fundamentally reversible. However, the reversible pebble game cannot harness the additional computational power granted by intermediate measurements, which are irreversible. The spooky pebble game, which models interleaved Hadamard basis measurements and adaptive phase corrections, reduces the number of qubits beyond what purely reversible approaches can achieve. While the spooky pebble game does not reduce the total space (bits plus qubits) complexity of the simulation, it reduces the amount of space that must be stored in qubits. We prove asymptotically tight trade-offs for the spooky pebble game on a line with any pebble bound. This in turn gives a tight time-qubit tradeoff for simulating arbitrary classical sequential computation when using the spooky pebble game. For example, for all ε ∈ (0, 1], any classical computation requiring time T and space S can be implemented on a quantum computer using only O(T /ε) gates and O(T εS1−ε) qubits. This improves on the best known bound for the reversible pebble game with that number of qubits, which uses O(21/εT ) gates. For smaller space bounds, we show that the spooky pebble game can simulate arbitrary computation with O(T 1+εS−ε/ε) gates and O(S/ε) qubits whereas any simulation via the reversible pebble game requires Ω(S · (1 + log(T /S))) qubits.},
  langid = {english},
  pubstate = {preprint},
  keywords = {Computer Science - Computational Complexity,Quantum Physics},
  file = {/home/exaclior/Zotero/storage/CUUU2U38/Kornerup et al. - 2024 - Tight Bounds on the Spooky Pebble Game Recycling .pdf}
}

@article{kralovicTimeSpaceComplexity2004,
  title = {Time and Space Complexity of Reversible Pebbling},
  author = {Královič, Richard},
  date = {2004},
  journaltitle = {RAIRO - Theoretical Informatics and Applications - Informatique Théorique et Applications},
  volume = {38},
  number = {2},
  pages = {137--161},
  issn = {1290-385X},
  doi = {10.1051/ita:2004008},
  url = {http://www.numdam.org/item/ITA_2004__38_2_137_0/},
  urldate = {2024-05-12},
  langid = {english},
  file = {/home/exaclior/Zotero/storage/WPCQIQPF/Královič - 2004 - Time and space complexity of reversible pebbling.pdf}
}

@article{kralovicTimeSpaceComplexity2004a,
  title = {Time and Space Complexity of Reversible Pebbling},
  author = {Královič, Richard},
  date = {2004-04},
  journaltitle = {RAIRO - Theoretical Informatics and Applications},
  shortjournal = {RAIRO-Theor. Inf. Appl.},
  volume = {38},
  number = {2},
  pages = {137--161},
  issn = {0988-3754, 1290-385X},
  doi = {10.1051/ita:2004008},
  url = {http://www.rairo-ita.org/10.1051/ita:2004008},
  urldate = {2024-05-12},
  abstract = {This paper investigates one possible model of reversible computations, an important paradigm in the context of quantum computing. Introduced by Bennett, a reversible pebble game is an abstraction of reversible computation that allows to examine the space and time complexity of various classes of problems. We present a technique for proving lower and upper bounds on time and space complexity for several types of graphs. Using this technique we show that the time needed to achieve optimal space for chain topology is Ω(n lg n) for infinitely many n and we discuss time-space trade-offs for chain. Further we show a tight optimal space bound for the binary tree of height h of the form h + Θ(lg∗ h) and discuss space complexity for the butterfly. These results give an evidence that reversible computations need more resources than standard computations. We also show an upper bound on time and space complexity of the reversible pebble game based on the time and space complexity of the standard pebble game, regardless of the topology of the graph.},
  langid = {english},
  file = {/home/exaclior/Zotero/storage/AUXGSVN3/Královič - 2004 - Time and space complexity of reversible pebbling.pdf}
}

@inproceedings{kumarEfficientRematerializationDeep2019,
  title = {Efficient {{Rematerialization}} for {{Deep Networks}}},
  booktitle = {Advances in {{Neural Information Processing Systems}}},
  author = {Kumar, Ravi and Purohit, Manish and Svitkina, Zoya and Vee, Erik and Wang, Joshua},
  date = {2019},
  volume = {32},
  publisher = {Curran Associates, Inc.},
  url = {https://proceedings.neurips.cc/paper_files/paper/2019/hash/ffe10334251de1dc98339d99ae4743ba-Abstract.html},
  urldate = {2024-05-12},
  abstract = {When training complex neural networks, memory usage can be an important bottleneck.  The question of when to rematerialize, i.e., to recompute intermediate values rather than retaining them in memory, becomes critical to achieving the best time and space efficiency.  In this work we consider the rematerialization problem and devise efficient algorithms that use structural characterizations of computation graphs---treewidth and pathwidth---to obtain provably efficient rematerialization schedules. Our experiments demonstrate the performance of these algorithms on many common deep learning models.},
  file = {/home/exaclior/Zotero/storage/56QEWU5A/Kumar et al. - 2019 - Efficient Rematerialization for Deep Networks.pdf}
}

@inproceedings{kwasniewskiRedbluePebblingRevisited2019,
  title = {Red-Blue Pebbling Revisited: Near Optimal Parallel Matrix-Matrix Multiplication},
  shorttitle = {Red-Blue Pebbling Revisited},
  booktitle = {Proceedings of the {{International Conference}} for {{High Performance Computing}}, {{Networking}}, {{Storage}} and {{Analysis}}},
  author = {Kwasniewski, Grzegorz and Kabić, Marko and Besta, Maciej and VandeVondele, Joost and Solcà, Raffaele and Hoefler, Torsten},
  date = {2019-11-17},
  series = {{{SC}} '19},
  pages = {1--22},
  publisher = {Association for Computing Machinery},
  location = {New York, NY, USA},
  doi = {10.1145/3295500.3356181},
  url = {https://dl.acm.org/doi/10.1145/3295500.3356181},
  urldate = {2024-05-12},
  abstract = {We propose COSMA: a parallel matrix-matrix multiplication algorithm that is near communication-optimal for all combinations of matrix dimensions, processor counts, and memory sizes. The key idea behind COSMA is to derive an optimal (up to a factor of 0.03\% for 10MB of fast memory) sequential schedule and then parallelize it, preserving I/O optimality. To achieve this, we use the red-blue pebble game to precisely model MMM dependencies and derive a constructive and tight sequential and parallel I/O lower bound proofs. Compared to 2D or 3D algorithms, which fix processor decomposition upfront and then map it to the matrix dimensions, it reduces communication volume by up to √ times. COSMA outperforms the established ScaLAPACK, CARMA, and CTF algorithms in all scenarios up to 12.8x (2.2x on average), achieving up to 88\% of Piz Daint's peak performance. Our work does not require any hand tuning and is maintained as an open source implementation.},
  isbn = {978-1-4503-6229-0},
  file = {/home/exaclior/Zotero/storage/7G9PEXXC/Kwasniewski et al. - 2019 - Red-blue pebbling revisited near optimal parallel.pdf}
}

@article{lengauerAsymptoticallyTightBounds1982,
  title = {Asymptotically Tight Bounds on Time-Space Trade-Offs in a Pebble Game},
  author = {Lengauer, Thomas and Tarjan, Robert E.},
  date = {1982-10-01},
  journaltitle = {Journal of the ACM},
  shortjournal = {J. ACM},
  volume = {29},
  number = {4},
  pages = {1087--1130},
  issn = {0004-5411},
  doi = {10.1145/322344.322354},
  url = {https://dl.acm.org/doi/10.1145/322344.322354},
  urldate = {2024-05-12},
  file = {/home/exaclior/Zotero/storage/8ENYBPVG/Lengauer and Tarjan - 1982 - Asymptotically tight bounds on time-space trade-of.pdf}
}

@inproceedings{lengauerUpperLowerBounds1979,
  title = {Upper and Lower Bounds on Time-Space Tradeoffs},
  booktitle = {Proceedings of the Eleventh Annual {{ACM}} Symposium on {{Theory}} of Computing},
  author = {Lengauer, Thomas and Tarjan, Robert Endre},
  date = {1979-04-30},
  series = {{{STOC}} '79},
  pages = {262--277},
  publisher = {Association for Computing Machinery},
  location = {New York, NY, USA},
  doi = {10.1145/800135.804420},
  url = {https://dl.acm.org/doi/10.1145/800135.804420},
  urldate = {2024-05-12},
  abstract = {This paper derives asymptotically tight bounds on the time-space tradeoffs for pebbling three different classes of directed acyclic graphs. Let N be the size of the graph, S the number of available pebbles, and T the time necessary for pebbling the graph. (a) A time space tradeoff of the form ST = θ(N2) is proved for a special class of permutation graphs which implement the bit reversal permutation. (b) A time-space tradeoff of the form T = S θ(N/S)θ(N/S) is proved for a class of graphs constructed by stacking superconcentrators in series. (c) A time-space tradeoff of the form T = S.22θ(N/S)is proved for pebbling general directed acyclic graphs.},
  isbn = {978-1-4503-7438-5},
  file = {/home/exaclior/Zotero/storage/E2Y4GEDP/Lengauer and Tarjan - 1979 - Upper and lower bounds on time-space tradeoffs.pdf}
}

@article{liReversibilityAdiabaticComputation1996,
  title = {Reversibility and {{Adiabatic Computation}}: {{Trading Time}} and {{Space}} for {{Energy}}},
  shorttitle = {Reversibility and {{Adiabatic Computation}}},
  author = {Li, Ming and Vitanyi, Paul},
  date = {1996-04-09},
  journaltitle = {Proceedings of the Royal Society of London. Series A: Mathematical, Physical and Engineering Sciences},
  shortjournal = {Proc. R. Soc. Lond. A},
  volume = {452},
  number = {1947},
  eprint = {quant-ph/9703022},
  eprinttype = {arxiv},
  pages = {769--789},
  issn = {1364-5021, 1471-2946},
  doi = {10.1098/rspa.1996.0039},
  url = {http://arxiv.org/abs/quant-ph/9703022},
  urldate = {2024-05-12},
  abstract = {Future miniaturization and mobilization of computing devices requires energy parsimonious ‘adiabatic’ computation. This is contingent on logical reversibility of computation. An example is the idea of quantum computations which are reversible except for the irreversible observation steps. We propose to study quantitatively the exchange of computational resources like time and space for irreversibility in computations. Reversible simulations of irreversible computations are memory intensive. Such (polynomial time) simulations are analysed here in terms of ‘reversible’ pebble games. We show that Bennett’s pebbling strategy uses least additional space for the greatest number of simulated steps. We derive a trade-off for storage space versus irreversible erasure. Next we consider reversible computation itself. An alternative proof is provided for the precise expression of the ultimate irreversibility cost of an otherwise reversible computation without restrictions on time and space use. A time-irreversibility trade-off hierarchy in the exponential time region is exhibited. Finally, extreme timeirreversibility trade-offs for reversible computations in the thoroughly unrealistic range of computable versus noncomputable time-bounds are given.},
  langid = {english},
  keywords = {Computer Science - Computational Complexity,Computer Science - Computational Engineering Finance and Science,Computer Science - Data Structures and Algorithms,Quantum Physics},
  file = {/home/exaclior/Zotero/storage/PEBGJJTL/Li and Vitanyi - 1996 - Reversibility and Adiabatic Computation Trading T.pdf}
}

@article{liReversibilityAdiabaticComputation1996a,
  title = {Reversibility and {{Adiabatic Computation}}: {{Trading Time}} and {{Space}} for {{Energy}}},
  shorttitle = {Reversibility and {{Adiabatic Computation}}},
  author = {Li, Ming and Vitanyi, Paul},
  date = {1996-04-09},
  journaltitle = {Proceedings of the Royal Society of London. Series A: Mathematical, Physical and Engineering Sciences},
  shortjournal = {Proc. R. Soc. Lond. A},
  volume = {452},
  number = {1947},
  eprint = {quant-ph/9703022},
  eprinttype = {arxiv},
  pages = {769--789},
  issn = {1364-5021, 1471-2946},
  doi = {10.1098/rspa.1996.0039},
  url = {http://arxiv.org/abs/quant-ph/9703022},
  urldate = {2024-05-12},
  abstract = {Future miniaturization and mobilization of computing devices requires energy parsimonious `adiabatic' computation. This is contingent on logical reversibility of computation. An example is the idea of quantum computations which are reversible except for the irreversible observation steps. We propose to study quantitatively the exchange of computational resources like time and space for irreversibility in computations. Reversible simulations of irreversible computations are memory intensive. Such (polynomial time) simulations are analysed here in terms of `reversible' pebble games. We show that Bennett's pebbling strategy uses least additional space for the greatest number of simulated steps. We derive a trade-off for storage space versus irreversible erasure. Next we consider reversible computation itself. An alternative proof is provided for the precise expression of the ultimate irreversibility cost of an otherwise reversible computation without restrictions on time and space use. A time-irreversibility trade-off hierarchy in the exponential time region is exhibited. Finally, extreme time-irreversibility trade-offs for reversible computations in the thoroughly unrealistic range of computable versus noncomputable time-bounds are given.},
  keywords = {Computer Science - Computational Complexity,Computer Science - Computational Engineering Finance and Science,Computer Science - Data Structures and Algorithms,Quantum Physics},
  file = {/home/exaclior/Zotero/storage/WQCBHCVW/Li and Vitanyi - 1996 - Reversibility and Adiabatic Computation Trading T.pdf;/home/exaclior/Zotero/storage/J3RZEDSJ/9703022.html}
}

@article{liuRedBlueStandardPebble,
  title = {Red-{{Blue}} and {{Standard Pebble Games}}: {{Complexity}} and {{Applications}} in the {{Sequential}} and {{Parallel Models}}},
  author = {Liu, Quanquan},
  langid = {english},
  file = {/home/exaclior/Zotero/storage/M8GWQST5/Liu - Red-Blue and Standard Pebble Games Complexity and.pdf}
}

@article{louiMinimumRegisterAllocation1979,
  title = {Minimum {{Register Allocation}} Is {{Complete}} in {{Polynomial Space}}},
  author = {Loui, Michael C.},
  date = {1979-03},
  url = {https://dspace.mit.edu/handle/1721.1/148956},
  urldate = {2024-05-11},
  abstract = {The Minimum Register Allocation Problem is to determine the minimum number of registers required to evaluate an arithmetic expression. A pebble game on directed acyclic graphs is used to prove that this is complete is complete in polynomial space.},
  langid = {english},
  annotation = {Accepted: 2023-03-29T14:12:44Z},
  file = {/home/exaclior/Zotero/storage/FP6MID2H/Loui - 1979 - Minimum Register Allocation is Complete in Polynom.pdf}
}

@article{marchalPartPebblegameModels,
  title = {Part 1. {{Pebble-game}} Models},
  author = {Marchal, Loris},
  langid = {english},
  file = {/home/exaclior/Zotero/storage/5M9IHIA3/Marchal - Part 1. Pebble-game models.pdf}
}

@online{ModelsComputationExploring,
  title = {Models of {{Computation}}: {{Exploring}} the {{Power}} of {{Computing}} - {{John E}}. {{Savage}} - {{Google Books}}},
  url = {https://books.google.com/books/about/Models_of_Computation.html?id=j2kZAQAAIAAJ&source=kp_book_description},
  urldate = {2024-05-10},
  file = {/home/exaclior/Zotero/storage/B9WI83QA/ModelsOfComputation.pdf}
}

@book{mooreNatureComputation2011,
  title = {The {{Nature}} of {{Computation}}},
  author = {Moore, Cristopher and Mertens, Stephan},
  date = {2011-08-11},
  eprint = {jnGKbpMV8xoC},
  eprinttype = {googlebooks},
  publisher = {OUP Oxford},
  abstract = {Computational complexity is one of the most beautiful fields of modern mathematics, and it is increasingly relevant to other sciences ranging from physics to biology. But this beauty is often buried underneath layers of unnecessary formalism, and exciting recent results like interactive proofs, phase transitions, and quantum computing are usually considered too advanced for the typical student. This book bridges these gaps by explaining the deep ideas of theoretical computer science in a clear and enjoyable fashion, making them accessible to non-computer scientists and to computer scientists who finally want to appreciate their field from a new point of view. The authors start with a lucid and playful explanation of the P vs. NP problem, explaining why it is so fundamental, and so hard to resolve. They then lead the reader through the complexity of mazes and games; optimization in theory and practice; randomized algorithms, interactive proofs, and pseudorandomness; Markov chains and phase transitions; and the outer reaches of quantum computing. At every turn, they use a minimum of formalism, providing explanations that are both deep and accessible. The book is intended for graduate and undergraduate students, scientists from other areas who have long wanted to understand this subject, and experts who want to fall in love with this field all over again.},
  isbn = {978-0-19-162080-5},
  langid = {english},
  pagetotal = {631},
  keywords = {Computers / Computer Science,Computers / Design Graphics & Media / Graphics Tools,Computers / Mathematical & Statistical Software,Mathematics / Discrete Mathematics,Science / Mechanics / Thermodynamics,Science / Physics / Condensed Matter,Science / Physics / General},
  file = {/home/exaclior/Zotero/storage/LGDXX2QW/Moore_Mertens_2011_The Nature of Computation.pdf}
}

@inproceedings{pappHardnessRedBluePebble2020,
  title = {On the {{Hardness}} of {{Red-Blue Pebble Games}}},
  booktitle = {Proceedings of the 32nd {{ACM Symposium}} on {{Parallelism}} in {{Algorithms}} and {{Architectures}}},
  author = {Papp, Pál András and Wattenhofer, Roger},
  date = {2020-07-09},
  series = {{{SPAA}} '20},
  pages = {419--429},
  publisher = {Association for Computing Machinery},
  location = {New York, NY, USA},
  doi = {10.1145/3350755.3400278},
  url = {https://dl.acm.org/doi/10.1145/3350755.3400278},
  urldate = {2024-05-12},
  abstract = {Red-blue pebble games model the computation cost of a two-level memory hierarchy. We present various hardness results in different red-blue pebbling variants, with a focus on the oneshot model. We first study the relationship between previously introduced red-blue pebble models (base, oneshot, nodel). We also analyze a new variant (compcost) to obtain a more realistic model of computation. We then prove that red-blue pebbling is NP-hard in all of these model variants. Furthermore, we show that in the oneshot model, a δ-approximation algorithm for δ{$<$}2 is only possible if the unique games conjecture is false. Finally, we show that greedy algorithms are not good candidates for approximation, since they can return significantly worse solutions than the optimum.},
  isbn = {978-1-4503-6935-0},
  keywords = {red-blue pebble game,time-memory trade-off},
  file = {/home/exaclior/Zotero/storage/DNI5UQDD/Papp and Wattenhofer - 2020 - On the Hardness of Red-Blue Pebble Games.pdf}
}

@article{paulSpaceBoundsGame1976,
  title = {Space Bounds for a Game on Graphs},
  author = {Paul, Wolfgang J. and Tarjan, Robert Endre and Celoni, James R.},
  date = {1976-12-01},
  journaltitle = {Mathematical systems theory},
  shortjournal = {Math. Systems Theory},
  volume = {10},
  number = {1},
  pages = {239--251},
  issn = {1433-0490},
  doi = {10.1007/BF01683275},
  url = {https://doi.org/10.1007/BF01683275},
  urldate = {2024-05-12},
  abstract = {We study a one-person game played by placing pebbles, according to certain rules, on the vertices of a directed graph. In [3] it was shown that for each graph withn vertices and maximum in-degreed, there is a pebbling strategy which requires at mostc(d) n/logn pebbles. Here we show that this bound is tight to within a constant factor. We also analyze a variety of pebbling algorithms, including one which achieves the 0(n/logn) bound.},
  langid = {english},
  keywords = {Pebble game,Register allocation,Space bounds,Turing machines},
  file = {/home/exaclior/Zotero/storage/T9S2NWKY/CS-TR-76-545.pdf}
}

@inproceedings{pippengerAdvancesPebbling1982,
  title = {Advances in Pebbling},
  booktitle = {Automata, {{Languages}} and {{Programming}}},
  author = {Pippenger, Nicholas},
  editor = {Nielsen, Mogens and Schmidt, Erik Meineche},
  date = {1982},
  pages = {407--417},
  publisher = {Springer},
  location = {Berlin, Heidelberg},
  doi = {10.1007/BFb0012787},
  isbn = {978-3-540-39308-5},
  langid = {english},
  file = {/home/exaclior/Zotero/storage/25PCHGCG/Pippenger - 1982 - Advances in pebbling.pdf}
}

@article{pippengerTimeSpaceTradeOff1978,
  title = {A {{Time-Space Trade-Off}}},
  author = {Pippenger, Nicholas},
  date = {1978-07-01},
  journaltitle = {Journal of the ACM},
  shortjournal = {J. ACM},
  volume = {25},
  number = {3},
  pages = {509--515},
  issn = {0004-5411},
  doi = {10.1145/322077.322091},
  url = {https://dl.acm.org/doi/10.1145/322077.322091},
  urldate = {2024-05-12},
  file = {/home/exaclior/Zotero/storage/T5XTJR6T/Pippenger - 1978 - A Time-Space Trade-Off.pdf}
}

@online{quistTradeoffsClassicalQuantum2024,
  title = {Trade-Offs between Classical and Quantum Space Using Spooky Pebbling},
  author = {Quist, Arend-Jan and Laarman, Alfons},
  date = {2024-01-19},
  eprint = {2401.10579},
  eprinttype = {arxiv},
  eprintclass = {quant-ph},
  url = {http://arxiv.org/abs/2401.10579},
  urldate = {2024-05-09},
  abstract = {Pebble games are used to study space/time trade-offs. Recently, spooky pebble games were introduced to study classical space / quantum space / time trade-offs for simulation of classical circuits on quantum computers. In this paper, the spooky pebble game framework is applied for the first time to general circuits. Using this framework we prove an upper bound for quantum space in the spooky pebble game. We also prove that solving the spooky pebble game is PSPACE-complete. Moreover, we present a solver for the spooky pebble game based on satisfiability combined with heuristic solvers. This spooky pebble game solver was empirically evaluated by calculating optimal classical space / quantum space / time trade-offs. Within limited runtime, the solver could find a strategy reducing quantum space when classical space is taken into account, showing that the spooky pebble model is useful to reduce quantum space.},
  langid = {english},
  pubstate = {preprint},
  keywords = {Quantum Physics},
  file = {/home/exaclior/Zotero/storage/JA2QEXFU/Quist and Laarman - 2024 - Trade-offs between classical and quantum space usi.pdf}
}

@article{savageSpacetimeTradeoffsFFT1978,
  title = {Space-Time Trade-Offs on the {{FFT}} Algorithm},
  author = {Savage, J. and Swamy, S.},
  date = {1978-09},
  journaltitle = {IEEE Transactions on Information Theory},
  shortjournal = {IEEE Trans. Inform. Theory},
  volume = {24},
  number = {5},
  pages = {563--568},
  issn = {0018-9448},
  doi = {10.1109/TIT.1978.1055938},
  url = {http://ieeexplore.ieee.org/document/1055938/},
  urldate = {2024-05-12},
  langid = {english},
  file = {/home/exaclior/Zotero/storage/K7TKRKEH/Savage and Swamy - 1978 - Space-time trade-offs on the FFT algorithm.pdf}
}

@inproceedings{sethiCompleteRegisterAllocation1973,
  title = {Complete Register Allocation Problems},
  booktitle = {Proceedings of the Fifth Annual {{ACM}} Symposium on {{Theory}} of Computing},
  author = {Sethi, Ravi},
  date = {1973-04-30},
  series = {{{STOC}} '73},
  pages = {182--195},
  publisher = {Association for Computing Machinery},
  location = {New York, NY, USA},
  doi = {10.1145/800125.804049},
  url = {https://dl.acm.org/doi/10.1145/800125.804049},
  urldate = {2024-05-08},
  abstract = {The search for efficient algorithms for register allocation dates back to the time of the first Fortran compiler for the IBM 704. Since then, many variants of the problem have been considered; depending on two factors: (1) the particular model for registers, and (2) the definition of the term “computation of a program” e.g. whether values may be computed more than once. We will show that several variants of the register allocation problem for straight line programs are polynomial complete. In particular we consider, (1) the case when each value is computed exactly once, and (2) the case when values may be recomputed as necessary. The completeness of the third problem considered is surprising. A straight line program starts with a set of initial values, and computes intermediate and final values. Suppose, for each value, the register that value must be computed into is preassigned. Then, (3) the problem of determining if there is a computation of the straight line program, that computes values into the assigned registers, is polynomial complete.},
  isbn = {978-1-4503-7430-9},
  keywords = {Dag,Polynomial complete,Program optimization,Register allocation,Straight line program},
  file = {/home/exaclior/Zotero/storage/TRNRB2FB/Sethi - 1973 - Complete register allocation problems.pdf}
}

@online{SpookyPebbleGames,
  title = {Spooky {{Pebble Games}} and {{Irreversible Uncomputation}}},
  url = {https://algassert.com/post/1905},
  urldate = {2024-05-09},
  file = {/home/exaclior/Zotero/storage/MNKXQV2D/1905.html}
}

@article{tompaTimespaceTradeoffsComputing1980,
  title = {Time-Space Tradeoffs for Computing Functions, Using Connectivity Properties of Their Circuits},
  author = {Tompa, Martin},
  date = {1980-04-01},
  journaltitle = {Journal of Computer and System Sciences},
  shortjournal = {Journal of Computer and System Sciences},
  volume = {20},
  number = {2},
  pages = {118--132},
  issn = {0022-0000},
  doi = {10.1016/0022-0000(80)90056-2},
  url = {https://www.sciencedirect.com/science/article/pii/0022000080900562},
  urldate = {2024-05-12},
  abstract = {Recent research has investigated time-space tradeoffs for register allocation strategies of certain fixed sets of expressions. This paper is concerned with the time-space tradeoff for register allocation strategies of any set of expressions which compute given functions. Time-space tradeoffs for pebbling superconcentrators and grates are developed. Corollaries which follow include tradeoffs for any straight-line program which computes polynomial multiplication, polynomial convolution, the discrete Fourier transform, straight-line merging, and the computation of “most” sets of n linear functions in n indeterminates.},
  file = {/home/exaclior/Zotero/storage/XDZHKQKR/0022000080900562.html}
}

@article{yannakakisPolynomialAlgorithmMincut1985,
  title = {A Polynomial Algorithm for the Min-Cut Linear Arrangement of Trees},
  author = {Yannakakis, Mihalis},
  date = {1985-10-01},
  journaltitle = {Journal of the ACM},
  shortjournal = {J. ACM},
  volume = {32},
  number = {4},
  pages = {950--988},
  issn = {0004-5411},
  doi = {10.1145/4221.4228},
  url = {https://dl.acm.org/doi/10.1145/4221.4228},
  urldate = {2024-05-12},
  abstract = {An algorithm is presented that finds a min-cut linear arrangement of a tree in O(n log n) time. An extension of the algorithm determines the number of pebbles needed to play the black and white pebble game on a tree.},
  file = {/home/exaclior/Zotero/storage/HY7J5BVV/Yannakakis - 1985 - A polynomial algorithm for the min-cut linear arra.pdf}
}
